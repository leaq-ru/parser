apiVersion: apps/v1
kind: Deployment
metadata:
  name: parser
  labels:
    app: parser
spec:
  replicas: 2
  selector:
    matchLabels:
      app: parser
  template:
    metadata:
      labels:
        app: parser
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/skip-outbound-ports: "80,443"
        config.linkerd.io/proxy-cpu-request: 220m
        config.linkerd.io/proxy-memory-request: 15Mi
    spec:
      imagePullSecrets:
        - name: ghcr
      containers:
        - name: parser
          image: busybox
          command:
            - /app/servicebin
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - 5s
          livenessProbe:
            exec:
              command:
                - /app/grpc_health_probe
                - -addr=:8080
          readinessProbe:
            exec:
              command:
                - /app/grpc_health_probe
                - -addr=:8080
          ports:
            - containerPort: 8080
              name: grpc
              protocol: TCP
          resources:
            requests:
              cpu: 180m
              memory: 160Mi
            limits:
              cpu: "1.5"
              memory: 1.5Gi
          env:
            - name: GRPC_PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: grpc
            - name: MONGODB_URL
              valueFrom:
                configMapKeyRef:
                  key: url
                  name: mongodb
            - name: VK_USERTOKENS
              valueFrom:
                secretKeyRef:
                  key: usertokens
                  name: vk
            - name: S3_DOWNLOADBUCKETNAME
              valueFrom:
                configMapKeyRef:
                  key: downloadbucketname
                  name: s3
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: endpoint
                  name: s3
            - name: S3_ACCESSKEYID
              valueFrom:
                configMapKeyRef:
                  key: accesskeyid
                  name: s3
            - name: S3_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: secretaccesskey
                  name: s3
            - name: S3_SECURE
              valueFrom:
                configMapKeyRef:
                  key: secure
                  name: s3
            - name: S3_REGION
              valueFrom:
                configMapKeyRef:
                  key: region
                  name: s3
            - name: SERVICE_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: service
            - name: SERVICE_CITY
              valueFrom:
                configMapKeyRef:
                  key: city
                  name: service
            - name: SERVICE_CATEGORY
              valueFrom:
                configMapKeyRef:
                  key: category
                  name: service
            - name: SERVICE_TECHNOLOGY
              valueFrom:
                configMapKeyRef:
                  key: technology
                  name: service
            - name: SERVICE_USER
              valueFrom:
                configMapKeyRef:
                  key: user
                  name: service
            - name: LOGLEVEL
              value: error

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: parser
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: parser
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 100

---
apiVersion: v1
kind: Service
metadata:
  name: parser
  labels:
    app: parser
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app: parser
